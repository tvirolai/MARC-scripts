#!/usr/bin/env python
# -*- coding: utf-8 -*

import numpy as np
import matplotlib.pyplot as plt

'''
The script takes a list of years generated by the command "sort file | uniq -c | sort -hr"
and plots them to a bar chart.
'''

# '/home/tuomo/Työpöytä/PIKIn_analyysit/data/OSAKOHTEETTOMAT/raportit/julkaisuvuodet.txt'
# '/home/tuomo/Työpöytä/PIKIn_analyysit/data/KAIKKI/raportit/julkaisuvuodet.txt'
inputFile = '/home/tuomo/Työpöytä/PIKIn_analyysit/data/UUTENATULLEET/raportit/julkaisuvuodet.txt'


def roundDownToNearestTenth(inputInt):
    i = inputInt - 9
    while True:
        if i % 10 == 0:
            return i
        i += 1


def createADict(dataList):
    '''
    Process the list of data into a dict. Format:
    1991: 2354
    1899: 23
    undefined: 21311 (i.e. invalid years)
    '''
    yearAmounts = {x[1]: int(x[0]) for x in dataList}
    yearAmounts["undefined"] = 0
    invalidKeys = []
    for key in yearAmounts:
        try:
            int(key)
            if not int(key) in range(500, 2020):
                yearAmounts["undefined"] += yearAmounts[key]
                invalidKeys.append(key)
        except ValueError:
            yearAmounts["undefined"] += yearAmounts[key]
            invalidKeys.append(key)
    for key in invalidKeys:
        if not key == "undefined":
            del yearAmounts[key]
    return yearAmounts


def mungeData(dataDict):
    '''
    Process the data into the following format:
    [1990-1999, 2000-2009]
    [123, 54324]
    Returns two lists.
    '''
    ranges = np.arange(1900, 2020, 10)
    ranges = ["Tuntematon", "-1900"] + list(ranges)
    values = (list(np.zeros(len(ranges), dtype=np.int)))
    for k, v in sorted(dataDict.items()):
        if k == "undefined":
            values[0] += v
        elif int(k) < 1900:
            values[1] += v
        elif int(k) >= 2010:
            values[-1] += v
        else:
            index = ranges.index(roundDownToNearestTenth(int(k)))
            values[index] += v
    for i, item in enumerate(ranges):
        try:
            item = int(item)
            if item == 2010:
                ranges[i] = '2010-'
            elif item >= 1900:
                ranges[i] = str(item) + "-" + str(item + 9)
        except ValueError:
            pass

    return ranges, values


def plotAsBarChart(ranges, values):
    # Plot the values into a bar chart
    y_pos = np.arange(len(ranges))
    plt.bar(y_pos, values, align='center', alpha=0.5)
    plt.xticks(y_pos, ranges)
    plt.ylabel('Tietueita')
    plt.title('Pikin aineistojen julkaisuvuodet (uusina Melindaan tulleet tietueet)')
    plt.show()

with open(inputFile, 'r') as f:
    data = [x.strip().split(" ") for x in f.read().split("\n") if len(x) > 4]
    ranges, values = mungeData(createADict(data))
    plotAsBarChart(ranges, values)
